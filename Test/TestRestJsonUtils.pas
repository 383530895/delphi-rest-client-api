unit TestRestJsonUtils;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, DateUtils, SysUtils, RestJsonGenerics, RestJsonUtils, TypInfo, System.Generics.Collections;

type

  TestTJsonUtil = class(TTestCase)
  strict private
  published
    procedure TestUnMarshal;
  end;

  TSubItems = class
    Price: Currency;
    Quality: Integer;
  end;

  TItems = class
    ItemId: string;
    SubItems: TObjectList<TSubItems>;
  end;

implementation

procedure TestTJsonUtil.TestUnMarshal;
var
  s: string;
  SearchResult: TObjectList<TItems>;
begin
  s :=
    '[{' + sLineBreak +
    '  "SubItems": [{' + sLineBreak +
    '    "Quality": null,' + sLineBreak +
    '    "Price": 1234.56' + sLineBreak +
    '  }],' + sLineBreak +
    '  "ItemId": null' + sLineBreak +
    '}]';

  SearchResult := TJsonUtil.UnMarshal<TObjectList<TItems>>(s);
  CheckTrue(SearchResult <> nil);
  CheckTrue(SearchResult.Count = 1);
  CheckTrue(SearchResult[0].SubItems.Count = 1);
  CheckEquals(1234.56, SearchResult[0].SubItems[0].Price, 0.001);
  CheckEquals(0, SearchResult[0].SubItems[0].Quality);

  SearchResult.OwnsObjects := true;
  SearchResult.Free;
end;

initialization
  RegisterTest(TestTJsonUtil.Suite);
end.

